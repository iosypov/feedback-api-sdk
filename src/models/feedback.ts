/**
 * Feedback APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  array,
  boolean,
  number,
  object,
  optional,
  Schema,
  string,
} from '../schema';

export interface Feedback {
  /** Rating of the feedback. */
  rating?: number;
  /** Sentiment of the feedback. */
  sentiment?: boolean;
  /** Reasons of the feedback. */
  reasons?: string[];
  /** Suggestion of the feedback. */
  suggestion?: string;
  /** Unique identifier of the feedback. */
  id: string;
  /** Date of the feedback creation. */
  createdAt: string;
  /** Date of the feedback update. */
  updatedAt?: string;
  /** Unique identifier of the user. */
  userId?: string;
  /** IP address of the user. */
  userIP: string;
  /** Unique identifier of the tenant. */
  tenantId: string;
  /** User agent of the device. */
  userAgent: string;
  /** Page of the feedback. */
  page?: string;
  /** Category of the feedback. */
  category?: string;
  /** operationId of the API. */
  apiOperationId?: string;
}

export const feedbackSchema: Schema<Feedback> = object({
  rating: ['rating', optional(number())],
  sentiment: ['sentiment', optional(boolean())],
  reasons: ['reasons', optional(array(string()))],
  suggestion: ['suggestion', optional(string())],
  id: ['id', string()],
  createdAt: ['createdAt', string()],
  updatedAt: ['updatedAt', optional(string())],
  userId: ['userId', optional(string())],
  userIP: ['userIP', string()],
  tenantId: ['tenantId', string()],
  userAgent: ['userAgent', string()],
  page: ['page', optional(string())],
  category: ['category', optional(string())],
  apiOperationId: ['apiOperationId', optional(string())],
});
